@page "/"
@using BlazorComponents.Shared
<div class="container">
	<h2>Chart JS charts using Blazor</h2>
	<div class="row">
		<button class="btn btn-primary" onclick="@UpdateChart">Update Chart </button>
	</div>
	<ChartJsBarChart ref="barChartJs" Chart="@blazorBarChartJs" Width="600" Height="300" />
</div>

@functions {

public ChartJsChart<ChartJsBarDataset> blazorBarChartJs { get; set; } = new ChartJsChart<ChartJsBarDataset>();
ChartJsBarChart barChartJs;

protected override void OnInit()
{
	blazorBarChartJs = new ChartJsChart<ChartJsBarDataset>()
	{
		ChartType = "bar",
		CanvasId = "myFirstBarChart",
		Options = new ChartJsOptions()
		{
			Text = "Sample chart from Blazor",
			BorderWidth = 1,
			Display = true
		},
		Data = new ChartJsData<ChartJsBarDataset>()
		{
			Labels = new List<string>() { "Red", "Blue", "Yellow", "Green", "Purple", "Orange" },
			Datasets = new List<ChartJsBarDataset>()
		{
			new ChartJsBarDataset()
			{
				Label = "# of Votes from blazor",
				BackgroundColor = "#cc65fe",
				BorderColor = "#cc65fe",
				Data = new List<int>(){ 19,12,5,3,3,2}
			},
			new ChartJsBarDataset()
			{
				Label = "# of Likes from blazor",
				BackgroundColor = "#36a2eb",
				BorderColor = "#36a2eb",
				Data = new List<int>(){ 30,10,15,13,13,12}
			}
		}
		}
	};
}

public void UpdateChart()
{
	//Update existing dataset
	blazorBarChartJs.Data.Labels.Add($"New{DateTime.Now.Second}");
	var firstDataSet = blazorBarChartJs.Data.Datasets[0];
	firstDataSet.Data.Add(DateTime.Now.Second);

	//Add new dataset
	//blazorLineChartJs.Data.Datasets.Add(new ChartJsLineDataset()
	//{
	//    BackgroundColor = "#cc65fe",
	//    BorderColor = "#cc65fe",
	//    Label = "# of Votes from blazor 1",
	//    Data = new List<int> {20,21,12,3,4,4},
	//    Fill = true,
	//    BorderWidth = 2,
	//    PointRadius = 3,
	//    PointBorderWidth = 1
	//});

	barChartJs.UpdateChart(blazorBarChartJs);
}
}